name: Test

on: ['push']
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DB: "openupgrade"
      DB_HOST: "localhost"
      DB_PASSWORD: "odoo"
      DB_PORT: 5432
      DB_USERNAME: "odoo"
      DOWNLOADS: https://github.com/OCA/OpenUpgrade/releases/download/databases
      ODOO: "./odoo/odoo-bin"
      PGHOST: "localhost"
      PGPASSWORD: "odoo"
      PGUSER: "odoo"
      USE_DEMO: "yes"
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Configure Postgres
        uses: harmon758/postgresql-action@v1
        with:
          postgresql version: "14"
          postgresql user: ${DB_USERNAME}
          postgresql password: ${DB_PASSWORD}
      - name: Check out Odoo
        uses: actions/checkout@v2
        with:
          repository: odoo/odoo
          ref: "16.0"
          fetch-depth: 1
          path: odoo
      - name: Check out addons
        uses: actions/checkout@v2
      - name: Configuration
        run: |
          sudo apt update
          sudo apt install \
              expect \
              expect-dev \
              libevent-dev \
              libldap2-dev \
              libsasl2-dev \
              libxml2-dev \
              libxslt1-dev \
              python3-lxml \
              python3-passlib \
              python3-psycopg2 \
              python3-serial \
              python3-simplejson \
              python3-werkzeug \
              python3-yaml \
              unixodbc-dev
      - name: Requirements Installation
        run: |
          # pip install -q -r odoo/requirements.txt
          pip install -r requirements.txt

      - name: Odoo test
        run: |
          # select modules and perform the upgrade
          MODULES=$(grep -E '.*' modules.txt | paste -sd "," -)
          if [ -z "$MODULES" ]; then
             echo "No modules to test yet"
             exit
          fi
          echo $MODULES
      #     REQUEST="update ir_module_module set state='uninstalled' \
      #         where name not in ('$(echo $MODULES_OLD | sed -e "s/,/','/g")')"
      #     echo Set the modules as not installable if they are not in the following list : $MODULES_OLD
      #     echo Running $REQUEST
      #     psql $DB -c "$REQUEST"
      #     ADDONS_PATHS="\
      #         $GITHUB_WORKSPACE/odoo/addons \
      #         $GITHUB_WORKSPACE/odoo/odoo/addons \
      #         $GITHUB_WORKSPACE/openupgrade"
      #     echo Execution of Openupgrade with the update of the following modules : $MODULES_NEW
      #     # Silence redundant logs from unlinking records (1 line is enough)
      #     # to prevent log overflow
      #     OPENUPGRADE_TESTS=1 $ODOO \
      #         --addons-path=`echo $ADDONS_PATHS | awk -v OFS="," '$1=$1'` \
      #         --database=$DB \
      #         --db_host=$DB_HOST \
      #         --db_password=$DB_PASSWORD \
      #         --db_port=$DB_PORT \
      #         --db_user=$DB_USERNAME \
      #         --load=base,web,openupgrade_framework \
      #         --test-enable \
      #         --stop-after-init \
      #         --update=$MODULES_NEW